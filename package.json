{
  "name": "template-gamma",
  "version": "1.0.0",
  "description": "Next.js 15.5.2 + React 19.0.0 template for Cloudflare Workers with OpenNext",
  "private": true,
  "scripts": {
    "dev": "pnpm --filter web dev",
    "build": "pnpm --filter web build",
    "start": "pnpm --filter web start",
    "lint": "pnpm --filter web lint && eslint . --ext .ts,.tsx",
    "lint:fix": "pnpm --filter web lint:fix && eslint . --ext .ts,.tsx --fix",
    "lint:deps": "eslint . --ext .ts,.tsx",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:unit": "vitest run __tests__/unit",
    "test:integration": "vitest run __tests__/integration",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:all": "pnpm test:unit && pnpm test:integration && pnpm test:e2e",
    "opennext:build": "pnpm --filter web build && npx @opennextjs/cloudflare build",
    "opennext:preview": "pnpm opennext:build && wrangler preview",
    "opennext:deploy:dry": "pnpm opennext:build && wrangler deploy --dry-run",
    "test:mode": "pnpm test:mode:monolith && pnpm test:mode:service",
    "test:mode:monolith": "BACKEND_MODE=monolith NEXT_PUBLIC_BACKEND_MODE=monolith vitest run",
    "test:mode:service": "BACKEND_MODE=service NEXT_PUBLIC_BACKEND_MODE=service vitest run",
    "type-check": "pnpm --filter web type-check",
    "clean": "pnpm --filter web clean && rm -rf node_modules",
    "prepare": "husky",
    "setup": "pnpm install && pnpm openapi:generate",
    "openapi:generate": "pnpm openapi:types && pnpm openapi:client",
    "openapi:types": "openapi-typescript openapi/openapi.yaml -o packages/generated/api-types.ts",
    "openapi:client": "orval --config orval.config.ts",
    "openapi:lint": "redocly lint openapi/openapi.yaml",
    "openapi:check": "pnpm openapi:generate && git diff --exit-code packages/generated/ || (echo 'OpenAPI generated files are out of sync. Run pnpm openapi:generate' && exit 1)",
    "validate:mode": "tsx -e \"import { getBackendMode, validateBackendMode } from './packages/contracts/backend-mode.ts'; const mode = getBackendMode(); console.log('Current mode:', mode); if (!validateBackendMode(mode)) throw new Error('Invalid mode: ' + mode);\""
  },
  "devDependencies": {
    "@opennextjs/cloudflare": "^1.9.0",
    "@playwright/test": "^1.55.1",
    "@redocly/cli": "^1.25.0",
    "@types/node": "^22.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "eslint": "^8.57.0",
    "eslint-plugin-import": "^2.32.0",
    "husky": "^9.0.0",
    "lint-staged": "^15.0.0",
    "msw": "^2.11.3",
    "openapi-typescript": "^7.4.0",
    "orval": "^7.3.0",
    "prettier": "^3.0.0",
    "tsx": "^4.20.6",
    "typescript": "^5.6.0",
    "vitest": "^2.0.0",
    "wrangler": "^4.40.2"
  },
  "engines": {
    "node": ">=22.0.0",
    "pnpm": ">=9.0.0"
  },
  "packageManager": "pnpm@9.12.0",
  "dependencies": {
    "zod": "^3.23.8"
  }
}
